generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Event{
    id          Int   @id @default(autoincrement())
    name        String
    startDate   DateTime
    endDate     DateTime
    sportid     Int 
    sport       Sport @relation(fields: [sportid], references: [id])
    locationid  Int 
    location    Location @relation(fields: [locationid], references: [id])
    matches     Matches[]
    visitors    VisitorEvent[]
}

model Sport{
    id         Int   @id @default(autoincrement())
    playerCount Int
    name       String @unique

    Event Event[]
}

model Location{
    id         Int   @id @default(autoincrement())
    city      String @unique
    cityCode  String
    street    String
    number    Int

    Event Event[]

    Player Player[]

    Admin Admin[]

    Visitor Visitor[]
}

model User{
    id        Int   @id @default(autoincrement())
    fullName  String
    phoneNumber  String
    email    String @unique
    password String

    Admin Admin[]

    Visitor Visitor[]

    Player Player[]
    role      String
}

model Player {
    playerId          Int      @id @default(autoincrement())
    userId      Int      @unique
    user        User     @relation(fields: [userId], references: [id])
    addressid   Int       @unique       
    address     Location @relation(fields: [addressid], references: [id])
    age         Int
    experience  Int
    matches     PlayerMatches[]
    team       String
}

model Admin {
    adminId          Int      @id @default(autoincrement())
    userId      Int     @unique
    user        User     @relation(fields: [userId], references: [id])
    addressid   Int       @unique
    address     Location @relation(fields: [addressid], references: [id])
}

model Visitor {
    visitorId   Int      @id @default(autoincrement())
    userId      Int      @unique
    user        User     @relation(fields: [userId], references: [id])
    addressid   Int       @unique
    address     Location @relation(fields: [addressid], references: [id])
    events      VisitorEvent[]
}

model Matches {
    id          Int      @id @default(autoincrement())
    winner      String?
    result      String?
    date        DateTime
    hour        String
    team1       String
    team2       String
    eventId     Int?
    event       Event? @relation(fields: [eventId], references: [id])
    players     PlayerMatches[]
}

model PlayerMatches {
    id Int @id @default(autoincrement())
    playerId Int
    matchesId Int
    match Matches @relation(fields: [matchesId], references: [id], onDelete: Cascade)
    player Player @relation(fields: [playerId], references: [playerId])

    @@unique([playerId, matchesId])
}

model VisitorEvent{
    id Int @id @default(autoincrement())
    visitorId Int
    eventId Int
    event Event @relation(fields: [eventId], references: [id], onDelete: Cascade)
    visitor Visitor @relation(fields: [visitorId], references: [visitorId])

    @@unique([visitorId, eventId])
}


